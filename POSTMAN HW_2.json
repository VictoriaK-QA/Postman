			"name": "HW#2",
			"item": [
				{
					"name": "1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 3. Спарсить response body в json.\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
									"var resp_name = jsonData.name;\r",
									"console.log(\"resp_name = \" + resp_name)\r",
									"pm.test(\"NAME_check\", function () {\r",
									"    pm.expect(resp_name).to.eql(\"Victoria\");\r",
									"});\r",
									"\r",
									"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
									"var resp_age = jsonData.age;\r",
									"var resp_age = +resp_age;\r",
									"console.log(\"resp_age = \" +resp_age)\r",
									"pm.test(\"AGE_check\", function () {\r",
									"    pm.expect(resp_age).to.eql(28);\r",
									"});\r",
									"\r",
									"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
									"var resp_salary = jsonData.salary;\r",
									"console.log(\"resp_salary = \" +resp_salary)\r",
									"pm.test(\"SALARY_check\", function () {\r",
									"    pm.expect(resp_salary).to.eql(1000);\r",
									"});\r",
									"\r",
									"// 7. Спарсить request\r",
									"var req = request.data;\r",
									"\r",
									"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
									"var req_name = req.name;\r",
									"\r",
									"console.log(\"resp_name = \" + resp_name)\r",
									"console.log(\"req_name = \" + req_name)\r",
									"\r",
									"pm.test(\"Req_Resp_NAME_check\", function () {\r",
									"    pm.expect(resp_name).to.eql(req_name);\r",
									"});\r",
									"\r",
									"// 9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
									"var req_age = req.age;\r",
									"var req_age = +req_age;\r",
									"\r",
									"console.log(\"resp_age = \" + resp_age)\r",
									"console.log(\"req_age = \" + req_age)\r",
									"\r",
									"pm.test(\"Req_Resp_AGE_check\", function () {\r",
									"    pm.expect(resp_age).to.eql(req_age);\r",
									"});\r",
									"\r",
									"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
									"var req_salary = req.salary;\r",
									"var req_salary = +req_salary;\r",
									"\r",
									"console.log(\"resp_salary = \" + resp_salary)\r",
									"console.log(\"req_salary = \" + req_salary)\r",
									"\r",
									"pm.test(\"Req_Resp_SALARY_check\", function () {\r",
									"    pm.expect(resp_salary).to.eql(req_salary);\r",
									"});\r",
									"\r",
									"// 11. Вывести в консоль параметр family из response\r",
									"var resp_family = jsonData.family\r",
									"console.log(resp_family)\r",
									"\r",
									"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
									"var resp_u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
									"\r",
									"var req = request.data;\r",
									"var req_u_salary_1_5_year = jsonData.family.u_salary_1_5_year;\r",
									"\r",
									"console.log(\"resp_u_salary_1_5_year = \" + resp_u_salary_1_5_year)\r",
									"\r",
									"pm.test(\"Req_Resp_u_salary_1_5_year_check\", function () {\r",
									"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary*4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Victoria",
									"type": "default"
								},
								{
									"key": "age",
									"value": "28",
									"type": "default"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_3",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}