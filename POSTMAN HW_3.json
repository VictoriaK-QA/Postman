		{
			"name": "HW#3",
			"item": [
				{
					"name": "1 /login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"var resp_token = jsonData.token\r",
									"console.log(resp_token)\r",
									"\r",
									"pm.environment.set(\"token\", resp_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "login",
									"value": "vika33",
									"type": "default"
								},
								{
									"key": "password",
									"value": "1234zaq",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/login",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /user_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// 2. Проверка структуры json в ответе.\r",
									"var schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"person\",\r",
									"        \"qa_salary_after_12_months\",\r",
									"        \"qa_salary_after_6_months\",\r",
									"        \"start_qa_salary\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"person\": {\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"title\": \"The person Schema\",\r",
									"            \"required\": [\r",
									"                \"u_age\",\r",
									"                \"u_name\",\r",
									"                \"u_salary_1_5_year\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"u_age\": {\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"The u_age Schema\",\r",
									"                    \"examples\": [\r",
									"                        28\r",
									"                    ]\r",
									"                },\r",
									"                \"u_name\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"default\": [],\r",
									"                    \"title\": \"The u_name Schema\",\r",
									"                    \"items\": {\r",
									"                        \"anyOf\": [{\r",
									"                            \"type\": \"string\",\r",
									"                            \"default\": \"\",\r",
									"                            \"title\": \"A Schema\",\r",
									"                            \"examples\": [\r",
									"                                \"Victoria\"\r",
									"                            ]\r",
									"                        },\r",
									"                        {\r",
									"                            \"type\": \"integer\",\r",
									"                            \"title\": \"A Schema\",\r",
									"                            \"examples\": [\r",
									"                                1000,\r",
									"                                28\r",
									"                            ]\r",
									"                        }]\r",
									"                    },\r",
									"                    \"examples\": [\r",
									"                        [\"Victoria\",\r",
									"                            1000,\r",
									"                            28\r",
									"                        ]\r",
									"                    ]\r",
									"                },\r",
									"                \"u_salary_1_5_year\": {\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"The u_salary_1_5_year Schema\",\r",
									"                    \"examples\": [\r",
									"                        4000\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"examples\": [{\r",
									"                \"u_age\": 28,\r",
									"                \"u_name\": [\r",
									"                    \"Victoria\",\r",
									"                    1000,\r",
									"                    28\r",
									"                ],\r",
									"                \"u_salary_1_5_year\": 4000\r",
									"            }]\r",
									"        },\r",
									"        \"qa_salary_after_12_months\": {\r",
									"            \"type\": \"number\",\r",
									"            \"default\": 0.0,\r",
									"            \"title\": \"The qa_salary_after_12_months Schema\",\r",
									"            \"examples\": [\r",
									"                2900.0\r",
									"            ]\r",
									"        },\r",
									"        \"qa_salary_after_6_months\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The qa_salary_after_6_months Schema\",\r",
									"            \"examples\": [\r",
									"                2000\r",
									"            ]\r",
									"        },\r",
									"        \"start_qa_salary\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The start_qa_salary Schema\",\r",
									"            \"examples\": [\r",
									"                1000\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"person\": {\r",
									"            \"u_age\": 28,\r",
									"            \"u_name\": [\r",
									"                \"Victoria\",\r",
									"                1000,\r",
									"                28\r",
									"            ],\r",
									"            \"u_salary_1_5_year\": 4000\r",
									"        },\r",
									"        \"qa_salary_after_12_months\": 2900.0,\r",
									"        \"qa_salary_after_6_months\": 2000,\r",
									"        \"start_qa_salary\": 1000\r",
									"    }]\r",
									"}\r",
									"pm.test(\"Проверка структуры json в ответе\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"// 3. В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
									"var resp = pm.response.json();\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"SALARY_6_months\", function () {\r",
									"    pm.expect(+resp.qa_salary_after_6_months).to.eql(+request.salary*2);\r",
									"});\r",
									"\r",
									"pm.test(\"SALARY_12_months\", function () {\r",
									"    pm.expect(+resp.qa_salary_after_12_months).to.eql(+request.salary*2.9);\r",
									"});\r",
									"\r",
									"pm.test(\"SALARY_1_5_year\", function () {\r",
									"    pm.expect(+resp.u_salary_1_5_year).to.eql(+request.salary*4);\r",
									"});\r",
									"\r",
									"// 4. Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
									"var resp_salary_1_5_year = JSON.parse(resp.person.u_salary_1_5_year);\r",
									"console.log(resp_salary_1_5_year)\r",
									"pm.environment.get(\"salary_1_5\");\r",
									"pm.environment.set(\"salary_1_5\", resp_salary_1_5_year);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\": 28,\r\n    \"salary\": 1000,\r\n    \"name\": \"Victoria\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 /get_test_user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "28",
									"type": "default"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "default"
								},
								{
									"key": "name",
									"value": "Victoria",
									"type": "default"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/get_test_user",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 /new_data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// 2. Проверка структуры json в ответе.\r",
									"var schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"age\",\r",
									"        \"name\",\r",
									"        \"salary\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"age\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The age Schema\",\r",
									"            \"examples\": [\r",
									"                28\r",
									"            ]\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The name Schema\",\r",
									"            \"examples\": [\r",
									"                \"Victoria\"\r",
									"            ]\r",
									"        },\r",
									"        \"salary\": {\r",
									"            \"type\": \"array\",\r",
									"            \"default\": [],\r",
									"            \"title\": \"The salary Schema\",\r",
									"            \"items\": {\r",
									"                \"anyOf\": [{\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"A Schema\",\r",
									"                    \"examples\": [\r",
									"                        1000\r",
									"                    ]\r",
									"                },\r",
									"                {\r",
									"                    \"type\": \"string\",\r",
									"                    \"title\": \"A Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"2000\",\r",
									"                        \"3000\"\r",
									"                    ]\r",
									"                }]\r",
									"            },\r",
									"            \"examples\": [\r",
									"                [1000,\r",
									"                    \"2000\",\r",
									"                    \"3000\"\r",
									"                ]\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"age\": 28,\r",
									"        \"name\": \"Victoria\",\r",
									"        \"salary\": [\r",
									"            1000,\r",
									"            \"2000\",\r",
									"            \"3000\"\r",
									"        ]\r",
									"    }]\r",
									"}\r",
									"\r",
									"pm.test(\"Проверка структуры json в ответе\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"// 3. В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
									"// Спарсить response body в json\r",
									"var resp = pm.response.json();\r",
									"// // Спарсить request.\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"SALARY[0]\", function () {\r",
									"    pm.expect(+resp.salary[0]).to.eql(+req.salary);\r",
									"});\r",
									"\r",
									"pm.test(\"SALARY[1]\", function () {\r",
									"    pm.expect(+resp.salary[1]).to.eql(+req.salary*2);\r",
									"});\r",
									"\r",
									"pm.test(\"SALARY[2]\", function () {\r",
									"    pm.expect(+resp.salary[2]).to.eql(+req.salary*3);\r",
									"});\r",
									"// 4. Проверить, что 2-й элемент массива salary больше 1-го и 0-го\r",
									"pm.test(\"salary2 > salary1 && salary0\", function () {\r",
									"    const salCheck = resp.salary[2] > resp.salary[1] && resp.salary[2] > resp.salary[0]\r",
									"    pm.expect(salCheck).to.be.true\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "28",
									"type": "default"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "default"
								},
								{
									"key": "name",
									"value": "Victoria",
									"type": "default"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "default"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://162.55.220.72:5005/new_data",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"new_data"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 /test_pet_info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// 2. Проверка структуры json в ответе.\r",
									"var schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"age\",\r",
									"        \"daily_food\",\r",
									"        \"daily_sleep\",\r",
									"        \"name\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"age\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The age Schema\",\r",
									"            \"examples\": [\r",
									"                28\r",
									"            ]\r",
									"        },\r",
									"        \"daily_food\": {\r",
									"            \"type\": \"number\",\r",
									"            \"default\": 0.0,\r",
									"            \"title\": \"The daily_food Schema\",\r",
									"            \"examples\": [\r",
									"                0.6\r",
									"            ]\r",
									"        },\r",
									"        \"daily_sleep\": {\r",
									"            \"type\": \"number\",\r",
									"            \"default\": 0.0,\r",
									"            \"title\": \"The daily_sleep Schema\",\r",
									"            \"examples\": [\r",
									"                125.0\r",
									"            ]\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The name Schema\",\r",
									"            \"examples\": [\r",
									"                \"Victoria\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"age\": 28,\r",
									"        \"daily_food\": 0.6,\r",
									"        \"daily_sleep\": 125.0,\r",
									"        \"name\": \"Victoria\"\r",
									"    }]\r",
									"}\r",
									"\r",
									"pm.test(\"Проверка структуры json в ответе\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"// 3. В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
									"// Спарсить response body в json\r",
									"var resp = pm.response.json();\r",
									"// // Спарсить request.\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"WEIGHT_1\", function () {\r",
									"    pm.expect(resp.daily_food).to.eql(req.weight*0.012);\r",
									"});\r",
									"\r",
									"pm.test(\"WEIGHT_2\", function () {\r",
									"    pm.expect(resp.daily_sleep).to.eql(req.weight*2.5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "28",
									"type": "default"
								},
								{
									"key": "weight",
									"value": "50",
									"type": "default"
								},
								{
									"key": "name",
									"value": "Victoria",
									"type": "default"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/test_pet_info",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"test_pet_info"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 /get_test_user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// 1. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// 2. Проверка структуры json в ответе.\r",
									"var schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"age\",\r",
									"        \"family\",\r",
									"        \"name\",\r",
									"        \"salary\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"age\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The age Schema\",\r",
									"            \"examples\": [\r",
									"                \"28\"\r",
									"            ]\r",
									"        },\r",
									"        \"family\": {\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"title\": \"The family Schema\",\r",
									"            \"required\": [\r",
									"                \"children\",\r",
									"                \"u_salary_1_5_year\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"children\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"default\": [],\r",
									"                    \"title\": \"The children Schema\",\r",
									"                    \"items\": {\r",
									"                        \"type\": \"array\",\r",
									"                        \"title\": \"A Schema\",\r",
									"                        \"items\": {\r",
									"                            \"anyOf\": [{\r",
									"                                \"type\": \"string\",\r",
									"                                \"title\": \"A Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"Alex\",\r",
									"                                    \"Kate\"\r",
									"                                ]\r",
									"                            },\r",
									"                            {\r",
									"                                \"type\": \"integer\",\r",
									"                                \"title\": \"A Schema\",\r",
									"                                \"examples\": [\r",
									"                                    24,\r",
									"                                    12\r",
									"                                ]\r",
									"                            }]\r",
									"                        },\r",
									"                        \"examples\": [\r",
									"                            [\"Alex\",\r",
									"                                24\r",
									"                            ],\r",
									"                            [\"Kate\",\r",
									"                                12\r",
									"                            ]\r",
									"                        ]\r",
									"                    },\r",
									"                    \"examples\": [\r",
									"                        [\r",
									"                            [\"Alex\",\r",
									"                                24\r",
									"                            ],\r",
									"                            [\"Kate\",\r",
									"                                12\r",
									"                            ]\r",
									"                        ]\r",
									"                    ]\r",
									"                },\r",
									"                \"u_salary_1_5_year\": {\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"The u_salary_1_5_year Schema\",\r",
									"                    \"examples\": [\r",
									"                        4000\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"examples\": [{\r",
									"                \"children\": [\r",
									"                    [\"Alex\",\r",
									"                        24\r",
									"                    ],\r",
									"                    [\"Kate\",\r",
									"                        12\r",
									"                    ]\r",
									"                ],\r",
									"                \"u_salary_1_5_year\": 4000\r",
									"            }]\r",
									"        },\r",
									"        \"name\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The name Schema\",\r",
									"            \"examples\": [\r",
									"                \"Victoria\"\r",
									"            ]\r",
									"        },\r",
									"        \"salary\": {\r",
									"            \"type\": \"integer\",\r",
									"            \"default\": 0,\r",
									"            \"title\": \"The salary Schema\",\r",
									"            \"examples\": [\r",
									"                1000\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"age\": \"28\",\r",
									"        \"family\": {\r",
									"            \"children\": [\r",
									"                [\"Alex\",\r",
									"                    24\r",
									"                ],\r",
									"                [\"Kate\",\r",
									"                    12\r",
									"                ]\r",
									"            ],\r",
									"            \"u_salary_1_5_year\": 4000\r",
									"        },\r",
									"        \"name\": \"Victoria\",\r",
									"        \"salary\": 1000\r",
									"    }]\r",
									"}\r",
									"\r",
									"pm.test(\"Проверка структуры json в ответе\", function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"// 3.Проверить что занчение поля name = значению переменной name из окружения\r",
									"// Спарсить response body в json\r",
									"var resp = pm.response.json();\r",
									"console.log(pm.environment.get(\"name\"))\r",
									"pm.test(\"enviroment_name\", function () {\r",
									"    pm.expect(pm.environment.get(\"name\")).to.eql(resp.name);\r",
									"});\r",
									"\r",
									"// 4. Проверить что занчение поля age в ответе соответсвует отправленному в запросе значению поля age\r",
									"// // Спарсить request.\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"Req_Resp_AGE_check\", function () {\r",
									"    pm.expect(resp.age).to.eql(req.age);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "age",
									"value": "28",
									"type": "default"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "default"
								},
								{
									"key": "name",
									"value": "Victoria",
									"type": "default"
								},
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/get_test_user",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"get_test_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 /currency",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "auth_token",
									"value": "{{token}}",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/currency",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"currency"
							]
						}
					},
					"response": []
				}
			]
		}